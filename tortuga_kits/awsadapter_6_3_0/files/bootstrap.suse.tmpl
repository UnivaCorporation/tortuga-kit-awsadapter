#!/usr/bin/env python

# Copyright 2008-2018 Univa Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from __future__ import print_function
import sys
import subprocess

### SETTINGS


def is_pkg_installed(name):
    retval = subprocess.call(['zypper', 'search', '--installed-only', '--match-words', name])
    return retval == 0


def install_pkg(name):
    retval = subprocess.call(['zypper', '--non-interactive', 'install', name])

    return retval


def main():
    sys.stdout.write('Installing Puppetlabs RPM GPG key... ')
    sys.stdout.flush()

    retval = subprocess.call(['rpmkeys', '--import', 'http://yum.puppetlabs.com/RPM-GPG-KEY-puppet'])
    if retval != 0:
        sys.stdout.write('failed.\n')
        sys.stderr.write('Error: unable to install Puppet RPM GPG key\n')
        sys.stderr.flush()
        sys.exit(1)

    sys.stdout.write('done.\n')

    # Install Puppetlabs' repository
    if not is_pkg_installed('puppetlabs-release-pc1'):
        install_pkg('http://yum.puppetlabs.com/puppet5/puppet-release-sles-12.noarch.rpm')

    if not is_pkg_installed('puppet-agent'):
        install_pkg('puppet-agent')

    p = subprocess.Popen(['/opt/puppetlabs/bin/puppet', 'agent', '--verbose', '--onetime', '--no-daemonize', '--logdest', '/tmp/puppet_bootstrap.log', '--color', 'false', '--waitforcert', '120', '--server', installerHostName], stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    while True:
        buf = p.stdout.readline()
        if not buf:
            break

        print(buf.rstrip())

    retval = p.wait()
    if retval not in (0, 2):
        sys.stderr.write('Error: unable to bootstrap Puppet (retval=%d)\n' % (retval))
        sys.exit(1)


if __name__ == '__main__':
    main()
