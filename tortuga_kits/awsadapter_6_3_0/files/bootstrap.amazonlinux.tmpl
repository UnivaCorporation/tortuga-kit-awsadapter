#!/usr/bin/env python

# Copyright 2008-2018 Univa Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import os
import itertools
import subprocess
import random
import urllib2
import time
import base64
import json

### SETTINGS



def tryCommand(command, good_return_values=(0,), retry_limit=0,
               time_limit=0, max_sleep_time=15000, sleep_interval=2000):
    total_sleep_time = 0
    for retries in itertools.count(0):
        returned = subprocess.Popen(command, shell=True).wait()
        if returned in good_return_values or \
                retries >= retry_limit or total_sleep_time >= time_limit:
            return returned

        seed = min(max_sleep_time, sleep_interval * 2 ** retries)
        sleep_for = (seed / 2 + random.randint(0, seed / 2)) / 1000.0
        total_sleep_time += sleep_for

        time.sleep(sleep_for)

def _installPackage(pkgList, yumopts=None, retries=10):
    cmd = 'yum'

    if yumopts:
        cmd += ' ' + yumopts

    cmd += ' -y install %s' % (pkgList)

    retval = tryCommand(cmd, retry_limit=retries)
    if retval != 0:
        raise Exception('Error installing package [%s]' % (pkgList))


def _isPackageInstalled(pkgName):
    return tryCommand('rpm -q --quiet %s' % pkgName) == 0


def installPuppet():
    url = 'http://yum.puppetlabs.com/puppetlabs-release-pc1-el-6.noarch.rpm'

    bRepoInstalled = _isPackageInstalled('puppetlabs-release')

    if not bRepoInstalled:
        retval = tryCommand('rpm -ivh %s' % url, 5)
        if retval != 0:
            raise Exception(
                'Unable to install package [puppetlabs-release]')

    # Attempt to install 'puppet-agent'
    if not _isPackageInstalled('puppet-agent'):
        _installPackage('puppet-agent')


def setHostName():
    url = 'https://%s:%s/v1/identify-node' % (installerIpAddress, port)

    ctx = ssl.create_default_context()
    ctx.check_hostname = False
    ctx.verify_mode = ssl.CERT_NONE

    req = urllib2.Request(url)

    req.add_header(
        'Authorization',
        'Basic ' + base64.standard_b64encode(
            '%s:%s' % (cfmUser, cfmPassword)))

    for nCount in range(5):
        try:
            response = urllib2.urlopen(req, context=ctx)
            break
        except urllib2.URLError:
            pass
        except urllib2.HTTPError as ex:
            if ex.code == 401:
                raise Exception(
                    'Invalid Tortuga webservice credentials')
            elif ex.code == 404:
                # Unrecoverable
                raise Exception(
                    'URI not found; invalid Tortuga webservice'
                    ' configuration')

            time.sleep(2 ** (nCount + 1))
    else:
        raise Exception('Unable to communicate with Tortuga webservice')

    d = json.load(response)

    if response.code != 200:
        if 'error' in d:
            errmsg = 'Tortuga webservice error: msg=[%s]' % (
                error['message'])
        else:
            errmsg = 'Tortuga webservice internal error'

        raise Exception(errmsg)

    h = d['node']['name']

    tryCommand('hostname %s' % h)

    with open('/etc/sysconfig/network', 'a') as fp:
        fp.write('HOSTNAME=\"%s\"\n' % h)

    return h


def bootstrapPuppet():
    cmd = ('/opt/puppetlabs/bin/puppet agent'
           ' --logdest /tmp/puppet_bootstrap.log'
           ' --onetime --server %s --waitforcert 120' % installerHostName)

    tryCommand(cmd, good_return_values=(0, 2), time_limit=10 * 60)


def main():
    domainName = dns_search

    if override_dns_domain:
        with open('/etc/resolv.conf', 'w') as fp:
            fp.write('# Created by Tortuga\n')

            if domainName is not None:
                fp.write('search %s\n' % domainName)

            if dns_options is not None:
                fp.write('options %s\n' % (dns_options))

            if not dns_nameservers:
                dns_nameservers = [installerIpAddress]

            for dns_nameserver in dns_nameservers:
                fp.write('nameserver %s\n' % (dns_nameserver))

    with open('/etc/hosts', 'a+') as fp:
        fp.write('%s\t%s\n' % (installerIpAddress, installerHostName))

    installPuppet()

    bootstrapPuppet()


if __name__ == '__main__':
    main()
