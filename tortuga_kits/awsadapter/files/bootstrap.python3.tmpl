#!/usr/bin/env python3

# Copyright 2008-2018 Univa Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import sys
import itertools
import subprocess
import random
import platform
import time

### SETTINGS


def tryCommand(command, good_return_values=(0,), retry_limit=0,
               time_limit=0, max_sleep_time=15000, sleep_interval=2000):
    total_sleep_time = 0
    for retries in itertools.count(0):
        returned = subprocess.Popen(command, shell=True).wait()
        if returned in good_return_values or \
                retries >= retry_limit or total_sleep_time >= time_limit:
            return returned

        seed = min(max_sleep_time, sleep_interval * 2 ** retries)
        sleep_for = (seed / 2 + random.randint(0, seed / 2)) / 1000.0
        total_sleep_time += sleep_for

        time.sleep(sleep_for)


def _installPackage(ostype, pkgList, yumopts=None, retries=10):
    if ostype == 'fedora':
        cmd = 'dnf'
    else:
        cmd = 'yum'

    if yumopts:
        cmd += ' ' + yumopts

    cmd += ' -y install %s' % (pkgList)

    retval = tryCommand(cmd, retry_limit=retries)
    if retval != 0:
        raise Exception('Error installing package [%s]' % (pkgList))


def _isPackageInstalled(pkgName):
    return tryCommand('rpm -q --quiet %s' % pkgName) == 0


def installPuppet(ostype, vers):
    pkgname = 'puppet6-release'

    url = 'http://yum.puppetlabs.com/puppet6'

    if ostype == 'fedora':
        url += '/{0}-fedora-{1}.noarch.rpm'.format(pkgname, vers)
    else:
        url += '/{0}-el-{1}.noarch.rpm' % (pkgname, vers)

    bRepoInstalled = _isPackageInstalled(pkgname)

    if not bRepoInstalled:
        retval = tryCommand('rpm -ivh %s' % url, retry_limit=5)
        if retval != 0:
            sys.stderr.write(
                'Error: unable to install package \"{0}\"\n'.format(pkgname))

            sys.exit(1)

    # Attempt to install puppet
    if not _isPackageInstalled('puppet-agent'):
        _installPackage(ostype, 'puppet-agent')


def bootstrapPuppet():
    runCommand('touch /tmp/puppet_bootstrap.log')
    cmd = ('/opt/puppetlabs/bin/puppet agent'
           ' --logdest /tmp/puppet_bootstrap.log'
           ' --no-daemonize'
           ' --onetime --server %s --waitforcert 120' % installerHostName)

    tryCommand(cmd, good_return_values=(0, 2), time_limit=10 * 60)


def main():
    if override_dns_domain:
        with open('/etc/resolv.conf', 'w') as fp:
            fp.write('# Created by Tortuga\n')

            if dns_search is not None:
                fp.write('search %s\n' % dns_search)

            if dns_options is not None:
                fp.write('options %s\n' % dns_options)

            for dns_nameserver in dns_nameservers:
                fp.write('nameserver %s\n' % dns_nameserver)

    tryCommand('setenforce permissive')

    vals = platform.dist()

    vers = vals[1].split('.')[0]

    with open('/etc/hosts', 'a+') as fp:
        fp.write('%s\t%s\n' % (installerIpAddress, installerHostName))

    installPuppet(vals[0], vers)

    bootstrapPuppet()


if __name__ == '__main__':
    main()
