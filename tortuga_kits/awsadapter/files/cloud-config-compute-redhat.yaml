## template: jinja
#cloud-config
# vim: syntax=yaml

# the runcmd module installs the script defined below but scripts-user actually
# executes it. Both runcmd and scripts-user should precede the puppet module.
# These values are modified from the AWS CentOS 7 AMI to meet our needs.
cloud_config_modules:
  - mounts
  - yum-add-repo
  - package-update-upgrade-install
  - runcmd

cloud_final_modules:
  - scripts-per-once
  - scripts-per-boot
  - scripts-per-instance
  - scripts-user
  - puppet
  - ssh-authkey-fingerprints
  - keys-to-console
  - final-message

# each command below runs very early on every boot unless marked with "instance"
# in which case it should run only once on first boot in lifetime of an instance
bootcmd:
  - setenforce 0
  - cloud-init-per instance dns_installer echo {{ installer_ip_address }} {{ installer }} >> /etc/hosts

# 1. Disable selinux on reboots
runcmd:
  - sed -i "s/SELINUX=.*/SELINUX=disabled/g" /etc/selinux/config
  - curl -o /etc/pki/ca-trust/source/anchors/tortuga-ca.pem http://{{ installer }}:8008/ca.pem
  - update-ca-trust
{%- if insertnode_request is defined %}
  - systemctl daemon-reload
  - systemctl start launch-register-node.service
{%- endif %}

# example to enable Launch as DNS resolver
# manage_resolv_conf: true
# resolv_conf:
#   nameservers: [ '{{ installer }}' ]

# example mount of a filesystem on attached block device
# mounts:
#   - [UUID=3cdb34c8-47f0-4e7e-b521-a75b9492e36b, /opt/R, auto, ro, '0', '0']

write_files:
{%- if insertnode_request is defined %}
  - path: /etc/launch_node_details
    owner: root:root
    permissions: '0644'
    content: |
      {
          "node_details": {
              "name": {{ '"{{ ds.meta_data.local_hostname }}"' }},
              "metadata": {
                  "ec2_instance_id": {{ '"{{ v1.instance_id }}"' }},
                  "ec2_ipaddress": {{ '"{{ ds.meta_data.local_ipv4 }}"' }}
              }
          }
      }
  - path: /etc/systemd/system/launch-register-node.service
    owner: root:root
    permissions: '0644'
    content: |
      [Unit]
      Description=Register node with Navops Launch
      [Service]
      Type=simple
      RemainAfterExit=yes
      ExecStart=/bin/curl --fail -X POST -H "Content-Type: application/json" \
        -d @/etc/launch_node_details \
        https://{{ installer }}:8443/v1/node-token/{{ insertnode_request }}
      Restart=on-failure
      RestartSec=15s
  - path: /etc/systemd/system/puppet.service.d/depends.conf
    owner: root:root
    permissions: '0644'
    content: |
      [Unit]
      Wants=launch-register-node.service
      [Service]
      ExecStartPre=/bin/systemctl is-active launch-register-node.service
      Restart=on-failure
      RestartSec=15s
{%- endif %}
  - path: /etc/pki/rpm-gpg/RPM-GPG-KEY-puppet6-release
    owner: root:root
    permissions: '0644'
    content: |
      -----BEGIN PGP PUBLIC KEY BLOCK-----
      
      mQINBFe2Iz4BEADqbv/nWmR26bsivTDOLqrfBEvRu9kSfDMzYh9Bmik1A8Z036Eg
      h5+TZD8Rrd5TErLQ6eZFmQXk9yKFoa9/C4aBjmsL/u0yeMmVb7/66i+x3eAYGLzV
      FyunArjtefZyxq0B2mdRHE8kwl5XGl8015T5RGHCTEhpX14O9yigI7gtliRoZcl3
      hfXtedcvweOf9VrV+t5LF4PrZejom8VcB5CE2pdQ+23KZD48+Cx/sHSLHDtahOTQ
      5HgwOLK7rBll8djFgIqP/UvhOqnZGIsg4MzTvWd/vwanocfY8BPwwodpX6rPUrD2
      aXPsaPeM3Q0juDnJT03c4i0jwCoYPg865sqBBrpOQyefxWD6UzGKYkZbaKeobrTB
      xUKUlaz5agSK12j4N+cqVuZUBAWcokXLRrcftt55B8jz/Mwhx8kl6Qtrnzco9tBG
      T5JN5vXMkETDjN/TqfB0D0OsLTYOp3jj4hpMpG377Q+6D71YuwfAsikfnpUtEBxe
      NixXuKAIqrgG8trfODV+yYYWzfdM2vuuYiZW9pGAdm8ao+JalDZss3HL7oVYXSJp
      MIjjhi78beuNflkdL76ACy81t2TvpxoPoUIG098kW3xd720oqQkyWJTgM+wV96bD
      ycmRgNQpvqHYKWtZIyZCTzKzTTIdqg/sbE/D8cHGmoy0eHUDshcE0EtxsQARAQAB
      tEhQdXBwZXQsIEluYy4gUmVsZWFzZSBLZXkgKFB1cHBldCwgSW5jLiBSZWxlYXNl
      IEtleSkgPHJlbGVhc2VAcHVwcGV0LmNvbT6JAj4EEwECACgFAle2Iz4CGwMFCQlm
      AYAGCwkIBwMCBhUIAgkKCwQWAgMBAh4BAheAAAoJEH9DgoDvjTSfIN0P/jcCRzK8
      WIdhcNz5dkj7xRZb8Oft2yDfenQmzb1SwGGa96IwJFcjF4Nq7ymcDUqunS2DEDb2
      gCucsqmW1ubkaggsYbc9voz/SQwhsQpBjfWbuyOX9DWmW6av/aB1F85wP79gyfqT
      uidTGxQE6EhDbLe7tuvxOHfM1bKsUtI+0n9TALLLHfXUEdtaXCwMlJuO1IIn1PWa
      H7HzyEjw6OW/cy73oM9nuErBIio1O60slPLOW2XNhdWZJCRWkcXyuumRjoepz7WN
      1JgsLOTcB7rcQaBP3pDN0O/Om5dlDQ6oYitoJs/F0gfEgwK68Uy8k8sUR+FLLJqM
      o0CwOg6CeWU4ShAEd1xZxVYW6VOOKlz9x9dvjIVDn2SlTBDmLS99ySlQS57rjGPf
      GwlRUnuZP4OeSuoFNNJNb9PO6XFSP66eNHFbEpIoBU7phBzwWpTXNsW+kAcY8Rno
      8GzKR/2FRsxe5Nhfh8xy88U7BA0tqxWdqpk/ym+wDcgHBfSRt0dPFnbaHAiMRlgX
      J/NPHBQtkoEdQTKA+ICxcNTUMvsPDQgZcU1/ViLMN+6kZaGNDVcPeMgDvqxu0e/T
      b3uYiId38HYbHmD6rDrOQL/2VPPXbdGbxDGQUgX1DfdOuFXw1hSTilwI1KdXxUXD
      sCsZbchgliqGcI1l2En62+6pI2x5XQqqiJ7+
      =HpaX
      -----END PGP PUBLIC KEY BLOCK-----

packages:
  - bash-completion
  - git
  - vim

# do full upgrade of all installed packages
package_upgrade: false

yum_repos:
  puppet6:
    name: Puppet 6 Repository el $releasever - $basearch
    enabled: 1
    baseurl: http://puppet-mirror.univa.com/yum.puppetlabs.com/puppet6/el/$releasever/$basearch
    gpgcheck: 1
    gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-puppet6-release

puppet:
  conf_file: /etc/puppetlabs/puppet/puppet.conf
  package: puppet-agent
  conf:
    agent:
      onetime: 'true'
      runinterval: 10m
      splay: 'true'
      splaylimit: 1m
      server: {{ installer }}
